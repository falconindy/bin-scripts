#!/bin/bash

#
# clone of Daenyth's pkgfile. fat free, no whip.
#

shopt -s -o pipefail

CACHEDIR=${XDG_CACHE_DIR:-$HOME/.cache}/pkglist
ARCH=$(uname -m)
repos=(testing core extra community community-testing)

createfileball() {
  local mirror=$(sed -n 's/$arch/'$ARCH'/;/^Server/{s/.*=[\t ]*\(.*\)/\1/p;q}' /etc/pacman.d/mirrorlist)

  [[ -d $CACHEDIR ]] || mkdir -p "$CACHEDIR"
  cd "$CACHEDIR" >/dev/null
  [[ -f repos.files.tar.gz ]] && rm repos.files.tar.gz
  mkdir -p {testing,core,extra,community{,-testing}}

  printf "Downloading and extracting repo tarballs... "
  for repo in "${repos[@]}"; do
    (
    curl -s "${mirror/\$repo/$repo/}/$repo.files.tar.gz" | tar -xz --wildcards -C $repo '*/files' 2>/dev/null
    (( $? )) && continue
    cd $repo >/dev/null
    for dir in *; do
      mv "$dir" "${dir%-*-*}"
    done
    ) &
  done
  wait
  printf "done!\n"

  printf "Creating master file tarball... "
  tar czf repos.files.tar.gz *
  printf "done!\n"

  rm -r "${repos[@]}"
}

dumpcontents() {
  local repo=$1 pkg=$2
  tar --wildcards -vOxf "$CACHEDIR/repos.files.tar.gz" $repo/$pkg/* |& awk '/%FILES%/{ pkg = prev; next }
                                                                            { sub("/files", ""); prev = $0 }
                                                                            { printf "%s ",pkg; print }'
}

whoowns() {
  local needle="${1//\//\\/}"
  tar -Oxvf "$CACHEDIR/repos.files.tar.gz" |& awk '/%FILES%/{ pkg = prev; next }
                                                   { sub("/files", ""); prev = $0 }
                                                   /'"$needle"'/{ printf "%-30s %s\n",pkg,$0 }'
}

[[ $1 ]] || exit 1

[[ ! -f $CACHEDIR/repos.files.tar.gz || $1 = -u ]] && { createfileball; exit; }

if [[ $1 = -l ]]; then
  shift
  case $# in
    0) exit 1 ;;
    1) if [[ $1 =~ / ]]; then
         repo=${1%/*}
         pkg=${1#*/}
       else 
         repo='*'; pkg=$1
       fi ;;
    2) repo=$1; pkg=$2 ;;
  esac

  dumpcontents "$repo" "$pkg" 2>/dev/null
else
  whoowns "$1"
fi

